/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Transactions } from "./api/resources/transactions/client/Client";
import { Accounts } from "./api/resources/accounts/client/Client";
import { Companies } from "./api/resources/companies/client/Client";
import { Reports } from "./api/resources/reports/client/Client";
import { Chat } from "./api/resources/chat/client/Client";
import { Invoices } from "./api/resources/invoices/client/Client";

export declare namespace OpenLedgerClientClient {
    interface Options {
        environment?: core.Supplier<environments.OpenLedgerClientEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class OpenLedgerClientClient {
    constructor(protected readonly _options: OpenLedgerClientClient.Options) {}

    protected _transactions: Transactions | undefined;

    public get transactions(): Transactions {
        return (this._transactions ??= new Transactions(this._options));
    }

    protected _accounts: Accounts | undefined;

    public get accounts(): Accounts {
        return (this._accounts ??= new Accounts(this._options));
    }

    protected _companies: Companies | undefined;

    public get companies(): Companies {
        return (this._companies ??= new Companies(this._options));
    }

    protected _reports: Reports | undefined;

    public get reports(): Reports {
        return (this._reports ??= new Reports(this._options));
    }

    protected _chat: Chat | undefined;

    public get chat(): Chat {
        return (this._chat ??= new Chat(this._options));
    }

    protected _invoices: Invoices | undefined;

    public get invoices(): Invoices {
        return (this._invoices ??= new Invoices(this._options));
    }
}
