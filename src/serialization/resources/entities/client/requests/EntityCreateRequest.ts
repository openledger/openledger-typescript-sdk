/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpenLedgerClient from "../../../../../api/index";
import * as core from "../../../../../core";
import { EntityCreateRequestEntityType } from "../../types/EntityCreateRequestEntityType";
import { EntityCreateRequestStatus } from "../../types/EntityCreateRequestStatus";

export const EntityCreateRequest: core.serialization.Schema<
    serializers.EntityCreateRequest.Raw,
    OpenLedgerClient.EntityCreateRequest
> = core.serialization.object({
    externalId: core.serialization.string().optional(),
    legalName: core.serialization.string(),
    tin: core.serialization.string().optional(),
    usState: core.serialization.string().optional(),
    entityType: EntityCreateRequestEntityType.optional(),
    phoneNumber: core.serialization.string().optional(),
    status: EntityCreateRequestStatus.optional(),
});

export declare namespace EntityCreateRequest {
    export interface Raw {
        externalId?: string | null;
        legalName: string;
        tin?: string | null;
        usState?: string | null;
        entityType?: EntityCreateRequestEntityType.Raw | null;
        phoneNumber?: string | null;
        status?: EntityCreateRequestStatus.Raw | null;
    }
}
