/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpenLedgerClient from "../../../../../api/index";
import * as core from "../../../../../core";
import { EntityUpdateRequestEntityType } from "../../types/EntityUpdateRequestEntityType";
import { EntityUpdateRequestStatus } from "../../types/EntityUpdateRequestStatus";

export const EntityUpdateRequest: core.serialization.Schema<
    serializers.EntityUpdateRequest.Raw,
    Omit<OpenLedgerClient.EntityUpdateRequest, "entityId">
> = core.serialization.object({
    legalName: core.serialization.string().optional(),
    tin: core.serialization.string().optional(),
    usState: core.serialization.string().optional(),
    entityType: EntityUpdateRequestEntityType.optional(),
    phoneNumber: core.serialization.string().optional(),
    status: EntityUpdateRequestStatus.optional(),
});

export declare namespace EntityUpdateRequest {
    export interface Raw {
        legalName?: string | null;
        tin?: string | null;
        usState?: string | null;
        entityType?: EntityUpdateRequestEntityType.Raw | null;
        phoneNumber?: string | null;
        status?: EntityUpdateRequestStatus.Raw | null;
    }
}
