/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpenLedgerClient from "../../../../../api/index";
import * as core from "../../../../../core";
import { TransactionRequestStatus } from "../../types/TransactionRequestStatus";

export const TransactionRequest: core.serialization.Schema<
    serializers.TransactionRequest.Raw,
    Omit<OpenLedgerClient.TransactionRequest, "entityId">
> = core.serialization.object({
    date: core.serialization.date().optional(),
    amount: core.serialization.number(),
    currency: core.serialization.string().optional(),
    description: core.serialization.string(),
    debitAccountId: core.serialization.string(),
    creditAccountId: core.serialization.string(),
    status: TransactionRequestStatus.optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace TransactionRequest {
    export interface Raw {
        date?: string | null;
        amount: number;
        currency?: string | null;
        description: string;
        debitAccountId: string;
        creditAccountId: string;
        status?: TransactionRequestStatus.Raw | null;
        metadata?: Record<string, unknown> | null;
    }
}
