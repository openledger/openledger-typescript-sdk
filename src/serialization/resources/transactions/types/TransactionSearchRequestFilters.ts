/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as OpenLedgerClient from "../../../../api/index";
import * as core from "../../../../core";
import { TransactionSearchRequestFiltersStatus } from "./TransactionSearchRequestFiltersStatus";

export const TransactionSearchRequestFilters: core.serialization.ObjectSchema<
    serializers.TransactionSearchRequestFilters.Raw,
    OpenLedgerClient.TransactionSearchRequestFilters
> = core.serialization.object({
    dateFrom: core.serialization.string().optional(),
    dateTo: core.serialization.string().optional(),
    amountMin: core.serialization.number().optional(),
    amountMax: core.serialization.number().optional(),
    status: TransactionSearchRequestFiltersStatus.optional(),
});

export declare namespace TransactionSearchRequestFilters {
    interface Raw {
        dateFrom?: string | null;
        dateTo?: string | null;
        amountMin?: number | null;
        amountMax?: number | null;
        status?: TransactionSearchRequestFiltersStatus.Raw | null;
    }
}
