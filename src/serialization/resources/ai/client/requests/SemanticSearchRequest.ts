/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpenLedgerClient from "../../../../../api/index";
import * as core from "../../../../../core";

export const SemanticSearchRequest: core.serialization.Schema<
    serializers.SemanticSearchRequest.Raw,
    OpenLedgerClient.SemanticSearchRequest
> = core.serialization.object({
    entityId: core.serialization.string(),
    query: core.serialization.string(),
    limit: core.serialization.number().optional(),
    sourceTypes: core.serialization.list(core.serialization.string()).optional(),
    documentTypes: core.serialization.list(core.serialization.string()).optional(),
    timeStart: core.serialization.date().optional(),
    timeEnd: core.serialization.date().optional(),
});

export declare namespace SemanticSearchRequest {
    export interface Raw {
        entityId: string;
        query: string;
        limit?: number | null;
        sourceTypes?: string[] | null;
        documentTypes?: string[] | null;
        timeStart?: string | null;
        timeEnd?: string | null;
    }
}
