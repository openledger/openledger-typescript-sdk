/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpenLedgerClient from "../../api/index";
import * as core from "../../core";
import { TransactionStatus } from "./TransactionStatus";

export const Transaction: core.serialization.ObjectSchema<serializers.Transaction.Raw, OpenLedgerClient.Transaction> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        entityId: core.serialization.string().optional(),
        timestamp: core.serialization.date().optional(),
        amount: core.serialization.number().optional(),
        currency: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        debitAccountId: core.serialization.string().optional(),
        creditAccountId: core.serialization.string().optional(),
        status: TransactionStatus.optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace Transaction {
    interface Raw {
        id?: string | null;
        entityId?: string | null;
        timestamp?: string | null;
        amount?: number | null;
        currency?: string | null;
        description?: string | null;
        debitAccountId?: string | null;
        creditAccountId?: string | null;
        status?: TransactionStatus.Raw | null;
        metadata?: Record<string, unknown> | null;
    }
}
