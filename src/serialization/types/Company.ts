/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpenLedgerClient from "../../api/index";
import * as core from "../../core";
import { CompanyEntityType } from "./CompanyEntityType";
import { CompanyStatus } from "./CompanyStatus";

export const Company: core.serialization.ObjectSchema<serializers.Company.Raw, OpenLedgerClient.Company> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        externalId: core.serialization.property("external_id", core.serialization.string().optional()),
        legalName: core.serialization.property("legal_name", core.serialization.string().optional()),
        tin: core.serialization.string().optional(),
        usState: core.serialization.property("us_state", core.serialization.string().optional()),
        entityType: core.serialization.property("entity_type", CompanyEntityType.optional()),
        phoneNumber: core.serialization.property("phone_number", core.serialization.string().optional()),
        developerId: core.serialization.property("developer_id", core.serialization.string().optional()),
        dateCreated: core.serialization.property("date_created", core.serialization.date().optional()),
        googleAuthToken: core.serialization.property("google_auth_token", core.serialization.string().optional()),
        adminUserId: core.serialization.property("admin_user_id", core.serialization.number().optional()),
        addressId: core.serialization.property("address_id", core.serialization.number().optional()),
        phone: core.serialization.string().optional(),
        website: core.serialization.string().optional(),
        logoUrl: core.serialization.property("logo_url", core.serialization.string().optional()),
        status: CompanyStatus.optional(),
        subscriptionPlan: core.serialization.property("subscription_plan", core.serialization.string().optional()),
        billingInformation: core.serialization.property("billing_information", core.serialization.string().optional()),
        settingsId: core.serialization.property("settings_id", core.serialization.number().optional()),
        new: core.serialization.boolean().optional(),
        ledger: core.serialization.string().optional(),
    });

export declare namespace Company {
    interface Raw {
        id?: string | null;
        external_id?: string | null;
        legal_name?: string | null;
        tin?: string | null;
        us_state?: string | null;
        entity_type?: CompanyEntityType.Raw | null;
        phone_number?: string | null;
        developer_id?: string | null;
        date_created?: string | null;
        google_auth_token?: string | null;
        admin_user_id?: number | null;
        address_id?: number | null;
        phone?: string | null;
        website?: string | null;
        logo_url?: string | null;
        status?: CompanyStatus.Raw | null;
        subscription_plan?: string | null;
        billing_information?: string | null;
        settings_id?: number | null;
        new?: boolean | null;
        ledger?: string | null;
    }
}
