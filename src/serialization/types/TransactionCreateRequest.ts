/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpenLedgerClient from "../../api/index";
import * as core from "../../core";
import { TransactionCreateRequestDirection } from "./TransactionCreateRequestDirection";

export const TransactionCreateRequest: core.serialization.ObjectSchema<
    serializers.TransactionCreateRequest.Raw,
    OpenLedgerClient.TransactionCreateRequest
> = core.serialization.object({
    date: core.serialization.string().optional(),
    amount: core.serialization.number(),
    currency: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    debitAccountId: core.serialization.string(),
    creditAccountId: core.serialization.string(),
    status: core.serialization.string().optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    direction: TransactionCreateRequestDirection.optional(),
    counterpartyName: core.serialization.string().optional(),
    categoryId: core.serialization.property("category_id", core.serialization.string().optional()),
});

export declare namespace TransactionCreateRequest {
    export interface Raw {
        date?: string | null;
        amount: number;
        currency?: string | null;
        description?: string | null;
        debitAccountId: string;
        creditAccountId: string;
        status?: string | null;
        metadata?: Record<string, unknown> | null;
        direction?: TransactionCreateRequestDirection.Raw | null;
        counterpartyName?: string | null;
        category_id?: string | null;
    }
}
