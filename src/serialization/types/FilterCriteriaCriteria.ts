/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpenLedgerClient from "../../api/index";
import * as core from "../../core";
import { FilterCriteriaCriteriaDate } from "./FilterCriteriaCriteriaDate";
import { FilterCriteriaCriteriaAmount } from "./FilterCriteriaCriteriaAmount";
import { FilterCriteriaCriteriaStatus } from "./FilterCriteriaCriteriaStatus";
import { FilterCriteriaCriteriaCategory } from "./FilterCriteriaCriteriaCategory";
import { FilterCriteriaCriteriaDirection } from "./FilterCriteriaCriteriaDirection";

export const FilterCriteriaCriteria: core.serialization.ObjectSchema<
    serializers.FilterCriteriaCriteria.Raw,
    OpenLedgerClient.FilterCriteriaCriteria
> = core.serialization.object({
    date: FilterCriteriaCriteriaDate.optional(),
    amount: FilterCriteriaCriteriaAmount.optional(),
    status: FilterCriteriaCriteriaStatus.optional(),
    category: FilterCriteriaCriteriaCategory.optional(),
    direction: FilterCriteriaCriteriaDirection.optional(),
    keyword: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace FilterCriteriaCriteria {
    export interface Raw {
        date?: FilterCriteriaCriteriaDate.Raw | null;
        amount?: FilterCriteriaCriteriaAmount.Raw | null;
        status?: FilterCriteriaCriteriaStatus.Raw | null;
        category?: FilterCriteriaCriteriaCategory.Raw | null;
        direction?: FilterCriteriaCriteriaDirection.Raw | null;
        keyword?: string[] | null;
    }
}
